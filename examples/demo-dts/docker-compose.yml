version: '3'

services:
  service-agent:
    build: ../..
    image: 2060-service-agent
    container_name: chatbot-service-agent
    restart: always
    networks:
      - chatbot
    ports:
      - 2800:3000
      - 2801:3001
    environment:
      - 3000:3000
      - 3001:3001
    environment:
      - AGENT_PUBLIC_DID=did:web:10.82.14.12%3A3000
      - AGENT_ENDPOINT=ws://10.82.14.12:3001
      - AGENT_INVITATION_IMAGE_URL=http://10.82.14.12:3001/avatar.png
      - AGENT_NAME=Chatbot Agent
      - USE_CORS=true
      - EVENTS_BASE_URL=http://chatbot-backend:5000

  chatbot-dts:
    build: 
      context: ../../
      dockerfile: ./examples/demo-dts/Dockerfile
    image: 2060-chatbot-dts
    container_name: chatbot-dts
    restart: always
    depends_on:
      - service-agent
    networks:
      - chatbot
    ports:
      - 5000:5000
    environment:
      - AGENT_PORT=5000
      - SERVICE_AGENT_ADMIN_BASE_URL=http://chatbot-service-agent:3000
      - API_VERSION=v1
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=gaia
      - POSTGRES_PASSWORD=2060demo

  redis:
    image: redis:alpine
    restart: always
    networks:
      - chatbot
    ports:
      - 6379:6379
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru

  postgres:
    image: postgres:15.2
    restart: always
    networks:
      - chatbot
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=2060demo
      - POSTGRES_USER=gaia
networks:
  chatbot:
